// <auto-generated />
using System;
using InteractiveTextbook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InteractiveTextbook.Migrations
{
    [DbContext(typeof(InteractiveTextbookDbContext))]
    [Migration("20240625143917_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("InteractiveTextbook.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InteractiveElementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InteractiveElementId")
                        .IsUnique();

                    b.ToTable("Books");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.InteractiveElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MediaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuizId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MediaId")
                        .IsUnique();

                    b.HasIndex("QuizId")
                        .IsUnique();

                    b.ToTable("InteractiveElements");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnsA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnsB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnsC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnsD")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AnswerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuizQuestion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId")
                        .IsUnique();

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SchoolSubject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Book", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.InteractiveElement", "InteractiveElement")
                        .WithOne()
                        .HasForeignKey("InteractiveTextbook.Models.Book", "InteractiveElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InteractiveElement");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.InteractiveElement", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.Media", "Media")
                        .WithOne()
                        .HasForeignKey("InteractiveTextbook.Models.InteractiveElement", "MediaId");

                    b.HasOne("InteractiveTextbook.Models.Quiz", "Quiz")
                        .WithOne()
                        .HasForeignKey("InteractiveTextbook.Models.InteractiveElement", "QuizId");

                    b.Navigation("Media");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Question", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.Answer", "CorrectAnswer")
                        .WithOne()
                        .HasForeignKey("InteractiveTextbook.Models.Question", "AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorrectAnswer");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Quiz", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.Question", "Question")
                        .WithOne()
                        .HasForeignKey("InteractiveTextbook.Models.Quiz", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Student", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("InteractiveTextbook.Models.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.Teacher", b =>
                {
                    b.HasOne("InteractiveTextbook.Models.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("InteractiveTextbook.Models.Teacher", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InteractiveTextbook.Models.User", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();

                    b.Navigation("Teacher")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
